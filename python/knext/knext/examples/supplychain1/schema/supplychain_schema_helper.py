# ATTENTION!
# This file is generated by Schema automatically, it will be refreshed after schema has been committed
# PLEASE DO NOT MODIFY THIS FILE!!!
#

class SupplyChain:
	def __init__(self):
		self.Company = self.Company()
		self.CompanyEvent = self.CompanyEvent()
		self.Index = self.Index()
		self.Industry = self.Industry()
		self.Person = self.Person()
		self.Product = self.Product()
		self.ProductChainEvent = self.ProductChainEvent()
		self.TaxOfCompanyEvent = self.TaxOfCompanyEvent()
		self.TaxOfProdEvent = self.TaxOfProdEvent()
		self.Trend = self.Trend()

	class Company:
		__typename__ = "SupplyChain.Company"
		description = "description"
		id = "id"
		name = "name"
		fundTrans1MonthIn = "fundTrans1MonthIn"
		fundTrans6MonthIn = "fundTrans6MonthIn"
		fundTrans1Month = "fundTrans1Month"
		fundTrans3Month = "fundTrans3Month"
		cashflowDiff6Month = "cashflowDiff6Month"
		fundTrans3MonthIn = "fundTrans3MonthIn"
		fundTrans6Month = "fundTrans6Month"
		cashflowDiff1Month = "cashflowDiff1Month"
		totalTransInAmt = "totalTransInAmt"
		product = "product"
		cashflowDiff3Month = "cashflowDiff3Month"

		def __init__(self):
			pass

	class CompanyEvent:
		__typename__ = "SupplyChain.CompanyEvent"
		description = "description"
		id = "id"
		name = "name"
		trend = "trend"
		subject = "subject"
		eventTime = "eventTime"
		leadTo = "leadTo"
		index = "index"
		belongTo = "belongTo"

		def __init__(self):
			pass

	class Index:
		__typename__ = "SupplyChain.Index"
		description = "description"
		id = "id"
		name = "name"
		alias = "alias"
		stdId = "stdId"

		def __init__(self):
			pass

	class Industry:
		__typename__ = "SupplyChain.Industry"
		description = "description"
		id = "id"
		name = "name"
		alias = "alias"
		stdId = "stdId"

		def __init__(self):
			pass

	class Person:
		__typename__ = "SupplyChain.Person"
		description = "description"
		id = "id"
		name = "name"
		certNo = "certNo"
		legalRepresentative = "legalRepresentative"
		age = "age"

		def __init__(self):
			pass

	class Product:
		__typename__ = "SupplyChain.Product"
		description = "description"
		id = "id"
		name = "name"
		belongToIndustry = "belongToIndustry"
		hasSupplyChain = "hasSupplyChain"
		alias = "alias"
		stdId = "stdId"

		def __init__(self):
			pass

	class ProductChainEvent:
		__typename__ = "SupplyChain.ProductChainEvent"
		description = "description"
		id = "id"
		name = "name"
		index = "index"
		belongTo = "belongTo"
		trend = "trend"
		eventTime = "eventTime"
		subject = "subject"

		def __init__(self):
			pass

	class TaxOfCompanyEvent:
		__typename__ = "SupplyChain.TaxOfCompanyEvent"
		description = "description"
		id = "id"
		name = "name"
		alias = "alias"
		stdId = "stdId"

		def __init__(self):
			pass

	class TaxOfProdEvent:
		__typename__ = "SupplyChain.TaxOfProdEvent"
		description = "description"
		id = "id"
		name = "name"
		stdId = "stdId"
		alias = "alias"

		def __init__(self):
			pass

	class Trend:
		__typename__ = "SupplyChain.Trend"
		description = "description"
		id = "id"
		name = "name"
		alias = "alias"
		stdId = "stdId"

		def __init__(self):
			pass

