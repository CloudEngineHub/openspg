<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 OpenSPG Authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License
  ~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antgroup.openspg.server.infra.dao.mapper.RefDOMapper">
  <resultMap id="BaseResultMap" type="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ref_id" jdbcType="VARCHAR" property="refId" />
    <result column="ref_type" jdbcType="VARCHAR" property="refType" />
    <result column="refed_id" jdbcType="VARCHAR" property="refedId" />
    <result column="refed_type" jdbcType="VARCHAR" property="refedType" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    <result column="config" jdbcType="LONGVARCHAR" property="config" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, name, ref_id, ref_type, refed_id, refed_type,status
  </sql>
  <sql id="Blob_Column_List">
    config
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_ref
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="query" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_ref
    <where>
      <if test="name != null and name != ''">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="refId != null and refId != ''">
        and ref_id = #{refId,jdbcType=VARCHAR}
      </if>
      <if test="refType != null and refType != ''">
        and ref_type = #{refType,jdbcType=VARCHAR}
      </if>
      <if test="refedId != null and refedId != ''">
        and refed_id = #{refedId,jdbcType=VARCHAR}
      </if>
      <if test="refedType != null and refedType != ''">
        and refed_type = #{refedType,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="getRefInfoByRightMatchRefedId" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_ref
    where refed_id like CONCAT(#{domainAccount,jdbcType=VARCHAR},'%')
  </select>

  <select id="selectByUniqueKey" resultType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_ref
    where
     ref_id = #{refId,jdbcType=VARCHAR}
    and ref_type = #{refType,jdbcType=VARCHAR}
    and refed_id = #{refedId,jdbcType=VARCHAR}
    and refed_type = #{refedType,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kg_ref
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByIds">
    delete from kg_ref where id in
    <foreach close=")" collection="ids" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </delete>

    <delete id="deleteByUniqueKey">
      delete from kg_ref
      where
      ref_id = #{refId,jdbcType=VARCHAR}
      and ref_type = #{refType,jdbcType=VARCHAR}
      and refed_id = #{refedId,jdbcType=VARCHAR}
      and refed_type = #{refedType,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kg_ref (gmt_create, gmt_modified, name, 
      ref_id, ref_type, refed_id, 
      refed_type, config, status)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{refId,jdbcType=VARCHAR}, #{refType,jdbcType=VARCHAR}, #{refedId,jdbcType=VARCHAR}, 
      #{refedType,jdbcType=VARCHAR}, #{config,jdbcType=LONGVARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kg_ref
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="refId != null">
        ref_id,
      </if>
      <if test="refType != null">
        ref_type,
      </if>
      <if test="refedId != null">
        refed_id,
      </if>
      <if test="refedType != null">
        refed_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="config != null">
        config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="refId != null">
        #{refId,jdbcType=VARCHAR},
      </if>
      <if test="refType != null">
        #{refType,jdbcType=VARCHAR},
      </if>
      <if test="refedId != null">
        #{refedId,jdbcType=VARCHAR},
      </if>
      <if test="refedType != null">
        #{refedType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="config != null">
        #{config,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    update kg_ref
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="refId != null">
        ref_id = #{refId,jdbcType=VARCHAR},
      </if>
      <if test="refType != null">
        ref_type = #{refType,jdbcType=VARCHAR},
      </if>
      <if test="refedId != null">
        refed_id = #{refedId,jdbcType=VARCHAR},
      </if>
      <if test="refedType != null">
        refed_type = #{refedType,jdbcType=VARCHAR},
      </if>
      <if test="config != null">
        config = #{config,jdbcType=LONGVARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    update kg_ref
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=VARCHAR},
      ref_type = #{refType,jdbcType=VARCHAR},
      refed_id = #{refedId,jdbcType=VARCHAR},
      refed_type = #{refedType,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
    config = #{config,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    update kg_ref
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=VARCHAR},
      ref_type = #{refType,jdbcType=VARCHAR},
      refed_id = #{refedId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
    refed_type = #{refedType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByUniqueKey" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.RefDO">
    update kg_ref
    <set>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="config != null">
        config = #{config,jdbcType=LONGVARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where
    ref_id = #{refId,jdbcType=VARCHAR}
    and ref_type = #{refType,jdbcType=VARCHAR}
    and refed_id = #{refedId,jdbcType=VARCHAR}
    and refed_type = #{refedType,jdbcType=VARCHAR}
  </update>

</mapper>